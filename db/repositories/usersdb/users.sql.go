// Code generated by sqlc. DO NOT EDIT.
// source: users.sql

package usersdb

import (
	"context"
	"database/sql"
	"time"
)

const create = `-- name: Create :exec
insert into users (passport, fullname, birth_date, death_date) values ($1, $2, $3, $4)
`

type CreateParams struct {
	Passport  string       `json:"passport"`
	Fullname  string       `json:"fullname"`
	BirthDate time.Time    `json:"birth_date"`
	DeathDate sql.NullTime `json:"death_date"`
}

func (q *Queries) Create(ctx context.Context, arg CreateParams) error {
	_, err := q.db.ExecContext(ctx, create,
		arg.Passport,
		arg.Fullname,
		arg.BirthDate,
		arg.DeathDate,
	)
	return err
}

const findByPassport = `-- name: FindByPassport :one
select id, passport, fullname, birth_date, death_date from users where passport = $1
`

func (q *Queries) FindByPassport(ctx context.Context, passport string) (User, error) {
	row := q.db.QueryRowContext(ctx, findByPassport, passport)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Passport,
		&i.Fullname,
		&i.BirthDate,
		&i.DeathDate,
	)
	return i, err
}
